<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sy.mapper.sys.RoleMapper" >

  <resultMap id="BaseResultMap" type="com.sy.domain.sys.Role" >
    <id column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="creator" property="creator" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="update_man" property="updateMan" jdbcType="VARCHAR" />
  </resultMap>

  <sql id="Base_Column_List" >
    role_id, role_name, description, state, create_time, creator, update_time, update_man
  </sql>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from role
    where role_id = #{roleId,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.sy.domain.sys.Role" >
    insert into role (role_id, role_name, description, 
      state, create_time, creator, 
      update_time, update_man)
    values (#{roleId,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{state,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{creator,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateMan,jdbcType=VARCHAR})
  </insert>

  <insert id="insertSelective" parameterType="com.sy.domain.sys.Role" >
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="roleName != null" >
        role_name,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="creator != null" >
        creator,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="updateMan != null" >
        update_man,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateMan != null" >
        #{updateMan,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.sy.domain.sys.Role" >
    update role
    <set >
      <if test="roleName != null" >
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null" >
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateMan != null" >
        update_man = #{updateMan,jdbcType=VARCHAR},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.sy.domain.sys.Role" >
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      creator = #{creator,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_man = #{updateMan,jdbcType=VARCHAR}
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>

  <select id="getList" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM role
    <include refid="queryWhere"/>
    <choose>
      <when test="orderby != null and orderby !=''">
        ORDER BY #{orderby,jdbcType=VARCHAR} ASC
      </when>
      <otherwise>
        ORDER BY create_time DESC
      </otherwise>
    </choose>
    <if test="max!=null and max!=''">
      LIMIT #{offset}, #{max}
    </if>
  </select>

  <select id="getCount" resultType="java.lang.Integer">
    SELECT COUNT(1) FROM role
    <include refid="queryWhere"/>
  </select>

  <select id="getCountById" resultType="java.lang.Integer">
    SELECT COUNT(1) FROM role WHERE role_id = #{roleId,jdbcType=INTEGER}
  </select>

  <sql id="queryWhere">
    <trim prefix="where" prefixOverrides="AND|OR">
      <if test="roleNameSerach != null and roleNameSerach != ''">
        AND role_name like CONCAT('%',#{roleNameSerach}, '%')
      </if>
      <if test="roleName != null and roleName != ''">
        AND role_name = #{roleName,jdbcType=VARCHAR}
      </if>
      <if test="roleId != null and roleId != ''">
        AND role_id = #{roleId,jdbcType=INTEGER}
      </if>
      <if test="state != null and state != ''">
        AND state = #{state,jdbcType=INTEGER}
      </if>
    </trim>
  </sql>

</mapper>