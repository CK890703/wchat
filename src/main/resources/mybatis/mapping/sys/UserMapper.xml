<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sy.mapper.sys.UserMapper" >
  <resultMap id="BaseResultMap" type="com.sy.domain.sys.User" >
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="user_type" property="userType" jdbcType="INTEGER" />
    <result column="real_name" property="realName" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="INTEGER" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="lastest_login_time" property="lastestLoginTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="creator" property="creator" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="update_man" property="updateMan" jdbcType="VARCHAR" />
    <result column="discription" property="discription" jdbcType="VARCHAR" />
  </resultMap>

  <sql id="Base_Column_List" >
    user_id, role_id, user_name, password, user_type, real_name, sex, age, phone, email,
    state, lastest_login_time, create_time, creator, update_time, update_man, discription
  </sql>

  <select id="getList" resultMap="BaseResultMap" parameterType="java.util.Map">
    SELECT a.*, b.role_name FROM user a
    LEFT JOIN role b ON a.role_id = b.role_id
    <include refid="queryWhere"/>
    order by create_time desc
    <if test="max!=null and max!=''">
      LIMIT #{offset}, #{max}
    </if>
  </select>

  <select id="getCount" resultType="java.lang.Integer">
    SELECT COUNT(1) FROM user a
    <include refid="queryWhere"/>
  </select>

  <sql id="queryWhere">
    <trim prefix="where" prefixOverrides="AND | OR">
      <if test="userName != null and userName!=''">
        and user_name = #{userName}
      </if>
      <if test="userType != null and userType!=''">
        and user_type = #{userType}
      </if>
      <if test="roleId != null and roleId!=''">
        and a.role_id = #{roleId,jdbcType=INTEGER}
      </if>
    </trim>
  </sql>

  <select id="getUser" resultMap="BaseResultMap" parameterType="java.util.Map">
    SELECT * FROM user WHERE user_name= #{username,jdbcType=VARCHAR} AND password= #{password,jdbcType=VARCHAR}
  </select>

  <delete id="modifyPassword" parameterType="java.util.Map">
    update user set password=#{password,jdbcType=VARCHAR} WHERE user_id=#{userId,jdbcType=INTEGER}
  </delete>

  <select id="getModel" resultMap="BaseResultMap" parameterType="java.lang.String">
      SELECT * FROM user WHERE user_id= #{userId,jdbcType=INTEGER}
  </select>

  <select id="getCountById" resultType="java.lang.Integer" parameterType="java.util.Map">
    SELECT count(*) FROM user WHERE user_id=#{userId,jdbcType=INTEGER}
  </select>

  <select id="getCountByUserName" resultType="java.lang.Integer" parameterType="java.util.Map">
    SELECT count(*) FROM user WHERE user_name=#{userName,jdbcType=VARCHAR}
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.sy.domain.sys.User" keyProperty="userId" useGeneratedKeys="true">
    insert into user (role_id, user_name,
      password, user_type, real_name, 
      sex, age, phone, email, 
      state, lastest_login_time, create_time, 
      creator, update_time, update_man, 
      discription)
    values (#{roleId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR},
      #{password,jdbcType=VARCHAR}, #{userType,jdbcType=INTEGER}, #{realName,jdbcType=VARCHAR}, 
      #{sex,jdbcType=INTEGER}, #{age,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{state,jdbcType=INTEGER}, #{lastestLoginTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, 
      #{creator,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{updateMan,jdbcType=VARCHAR}, 
      #{discription,jdbcType=VARCHAR})
  </insert>

  <insert id="insertSelective" parameterType="com.sy.domain.sys.User" keyProperty="userId" useGeneratedKeys="true">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="userType != null" >
        user_type,
      </if>
      <if test="realName != null" >
        real_name,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="lastestLoginTime != null" >
        lastest_login_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="creator != null" >
        creator,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="updateMan != null" >
        update_man,
      </if>
      <if test="discription != null" >
        discription,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="userType != null" >
        #{userType,jdbcType=INTEGER},
      </if>
      <if test="realName != null" >
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="lastestLoginTime != null" >
        #{lastestLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateMan != null" >
        #{updateMan,jdbcType=VARCHAR},
      </if>
      <if test="discription != null" >
        #{discription,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.sy.domain.sys.User" >
    update user
    <set >
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="userType != null" >
        user_type = #{userType,jdbcType=INTEGER},
      </if>
      <if test="realName != null" >
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="lastestLoginTime != null" >
        lastest_login_time = #{lastestLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null" >
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateMan != null" >
        update_man = #{updateMan,jdbcType=VARCHAR},
      </if>
      <if test="discription != null" >
        discription = #{discription,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.sy.domain.sys.User" >
    update user
    set role_id = #{roleId,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      user_type = #{userType,jdbcType=INTEGER},
      real_name = #{realName,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      age = #{age,jdbcType=INTEGER},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      lastest_login_time = #{lastestLoginTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      creator = #{creator,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_man = #{updateMan,jdbcType=VARCHAR},
      discription = #{discription,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>