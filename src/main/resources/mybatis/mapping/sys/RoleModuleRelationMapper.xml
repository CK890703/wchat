<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sy.mapper.sys.RoleModuleRelationMapper" >

  <resultMap id="BaseResultMap" type="com.sy.domain.sys.RoleModuleRelation" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="module_id" property="moduleId" jdbcType="INTEGER" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="permission_code" property="permissionCode" jdbcType="VARCHAR" />
  </resultMap>

  <resultMap id="ExtResultMap" type="com.sy.domain.sys.RoleModuleRelation" extends="BaseResultMap" >
    <result column="business_code" property="businessCode" jdbcType="VARCHAR" />
  </resultMap>

  <sql id="Base_Column_List" >
    id, module_id, role_id, permission_code
  </sql>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from role_module_relation
    where id = #{id,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from role_module_relation
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.sy.domain.sys.RoleModuleRelation" >
    insert into role_module_relation (id, module_id, role_id,
      permission_code)
    values (#{id,jdbcType=INTEGER}, #{moduleId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, 
      #{permissionCode,jdbcType=VARCHAR})
  </insert>

  <insert id="insertSelective" parameterType="com.sy.domain.sys.RoleModuleRelation" >
    insert into role_module_relation
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="moduleId != null" >
        module_id,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="permissionCode != null" >
        permission_code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="moduleId != null" >
        #{moduleId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="permissionCode != null" >
        #{permissionCode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.sy.domain.sys.RoleModuleRelation" >
    update role_module_relation
    <set >
      <if test="moduleId != null" >
        module_id = #{moduleId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="permissionCode != null" >
        permission_code = #{permissionCode,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.sy.domain.sys.RoleModuleRelation" >
    update role_module_relation
    set module_id = #{moduleId,jdbcType=INTEGER},
      role_id = #{roleId,jdbcType=INTEGER},
      permission_code = #{permissionCode,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getRoleModuleRelationList" resultMap="ExtResultMap">
    SELECT a.*, b.business_code FROM role_module_relation a
    LEFT JOIN module b ON a.module_id = b.module_id
    <trim prefix="where" prefixOverrides="AND | OR">
      <if test="roleId != null and roleId!=''">
        and a.role_id = #{roleId,jdbcType=INTEGER}
      </if>
    </trim>
  </select>

  <select id="getList" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM role_module_relation
    <include refid="queryWhere"/>
    <choose>
      <when test="orderby != null and orderby !=''">
        ORDER BY #{orderby,jdbcType=VARCHAR} ASC
      </when>
      <otherwise>
        ORDER BY module_id DESC
      </otherwise>
    </choose>
    <if test="max!=null and max!=''">
      LIMIT #{offset}, #{max}
    </if>
  </select>

  <select id="getRoleModule" resultMap="BaseResultMap" parameterType="java.util.Map">
    SELECT * FROM role_module_relation WHERE module_id = #{moduleId,jdbcType=INTEGER} AND role_id = #{roleId,jdbcType=INTEGER}
  </select>

  <select id="getCount" resultType="java.lang.Integer">
    SELECT COUNT(1) FROM role_module_relation
    <include refid="queryWhere"/>
  </select>

  <select id="getCountById" resultType="java.lang.Integer">
    SELECT COUNT(1) FROM role_module_relation WHERE id = #{id,jdbcType=INTEGER}
  </select>

  <delete id="deleteByRoleId" parameterType="java.lang.Integer" >
    delete from role_module_relation
    where role_id = #{roleId,jdbcType=INTEGER}
  </delete>

  <sql id="queryWhere">
    <trim prefix="where" prefixOverrides="AND|OR">
      <if test="roleName != null and roleName != ''">
        AND role_name like CONCAT('%',#{roleName}, '%')
      </if>
      <if test="moduleId != null and moduleId != ''">
        AND module_id = #{moduleId,jdbcType=INTEGER}
      </if>
      <if test="roleId != null and roleId != ''">
        AND role_id = #{roleId,jdbcType=INTEGER}
      </if>
    </trim>
  </sql>

</mapper>